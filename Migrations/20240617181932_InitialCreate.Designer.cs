// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mooexpress.Data;

#nullable disable

namespace mooexpress.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240617181932_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("mooexpress.Models.Anuncio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GadoId")
                        .HasColumnType("int");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<DateTime>("Publicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GadoId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Anuncios");
                });

            modelBuilder.Entity("mooexpress.Models.Avaliacoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Avaliacao")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("mooexpress.Models.Endereco_entrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cep")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Endereco_Entregas");
                });

            modelBuilder.Entity("mooexpress.Models.Gado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<string>("Raca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("Gados");
                });

            modelBuilder.Entity("mooexpress.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codigo")
                        .HasColumnType("int");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("mooexpress.Models.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnuncioId")
                        .HasColumnType("int");

                    b.Property<int?>("Endereco_EntregaId")
                        .HasColumnType("int");

                    b.Property<string>("Forma_pagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId")
                        .IsUnique();

                    b.HasIndex("Endereco_EntregaId")
                        .IsUnique()
                        .HasFilter("[Endereco_EntregaId] IS NOT NULL");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("mooexpress.Models.Anuncio", b =>
                {
                    b.HasOne("mooexpress.Models.Gado", "Gado")
                        .WithOne("Anuncio")
                        .HasForeignKey("mooexpress.Models.Anuncio", "GadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mooexpress.Models.Usuario", "Usuario")
                        .WithMany("Anuncios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("mooexpress.Models.Avaliacoes", b =>
                {
                    b.HasOne("mooexpress.Models.Usuario", "Usuario")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("mooexpress.Models.Venda", b =>
                {
                    b.HasOne("mooexpress.Models.Anuncio", "Anuncio")
                        .WithOne("Venda")
                        .HasForeignKey("mooexpress.Models.Venda", "AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mooexpress.Models.Endereco_entrega", "Endereco_Entrega")
                        .WithOne("Venda")
                        .HasForeignKey("mooexpress.Models.Venda", "Endereco_EntregaId");

                    b.Navigation("Anuncio");

                    b.Navigation("Endereco_Entrega");
                });

            modelBuilder.Entity("mooexpress.Models.Anuncio", b =>
                {
                    b.Navigation("Venda")
                        .IsRequired();
                });

            modelBuilder.Entity("mooexpress.Models.Endereco_entrega", b =>
                {
                    b.Navigation("Venda")
                        .IsRequired();
                });

            modelBuilder.Entity("mooexpress.Models.Gado", b =>
                {
                    b.Navigation("Anuncio")
                        .IsRequired();
                });

            modelBuilder.Entity("mooexpress.Models.Usuario", b =>
                {
                    b.Navigation("Anuncios");

                    b.Navigation("Avaliacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
